/**
 * Copyright 2023 Huawei Technologies Co., Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
DEF_OPCODE( POP_TOP                      , Opcode::Class::kStack,          0)
DEF_OPCODE( DUP_TOP                      , Opcode::Class::kStack,          0)
DEF_OPCODE( DUP_TOP_TWO                  , Opcode::Class::kStack,          0)
DEF_OPCODE( COPY                         , Opcode::Class::kStack,          0)
DEF_OPCODE( ROT_FOUR                     , Opcode::Class::kStack,          0)
DEF_OPCODE( ROT_N                        , Opcode::Class::kStack,          0)
DEF_OPCODE( ROT_THREE                    , Opcode::Class::kStack,          0)
DEF_OPCODE( ROT_TWO                      , Opcode::Class::kStack,          0)
DEF_OPCODE( SWAP                         , Opcode::Class::kStack,          0)

DEF_OPCODE( EXTENDED_ARG                 , Opcode::Class::kNop,            0)
DEF_OPCODE( NOP                          , Opcode::Class::kNop,            0)
DEF_OPCODE( CACHE                        , Opcode::Class::kNop,            0)
DEF_OPCODE( RESUME                       , Opcode::Class::kNop,            0)

DEF_OPCODE( LOAD_FAST                    , Opcode::Class::kLocal,          0)
DEF_OPCODE( STORE_FAST                   , Opcode::Class::kLocal,          0)
DEF_OPCODE( DELETE_FAST                  , Opcode::Class::kLocal,          0)

DEF_OPCODE( LOAD_CLOSURE                 , Opcode::Class::kCell,           kHasFree | kCanDel)
DEF_OPCODE( LOAD_DEREF                   , Opcode::Class::kCell,           kHasFree | kCanDel)
DEF_OPCODE( STORE_DEREF                  , Opcode::Class::kCell,           kHasFree)
DEF_OPCODE( DELETE_DEREF                 , Opcode::Class::kCell,           kHasFree)
DEF_OPCODE( MAKE_CELL                    , Opcode::Class::kOther,          kHasFree | kCanDel)
DEF_OPCODE( LOAD_CLASSDEREF              , Opcode::Class::kOther,          kHasFree | kCanDel)

DEF_OPCODE( LOAD_GLOBAL                  , Opcode::Class::kGlobal,         kHasName | kCanDel)
DEF_OPCODE( STORE_GLOBAL                 , Opcode::Class::kGlobal,         kHasName)
DEF_OPCODE( DELETE_GLOBAL                , Opcode::Class::kGlobal,         kHasName)

DEF_OPCODE( BINARY_SUBSCR                , Opcode::Class::kItem,           kMayDel)
DEF_OPCODE( STORE_SUBSCR                 , Opcode::Class::kItem,           0)
DEF_OPCODE( DELETE_SUBSCR                , Opcode::Class::kItem,           0)

DEF_OPCODE( LOAD_ATTR                    , Opcode::Class::kAttr,           kHasName | kMayDel)
DEF_OPCODE( LOAD_METHOD                  , Opcode::Class::kAttr,           kHasName | kMayDel)
DEF_OPCODE( STORE_ATTR                   , Opcode::Class::kAttr,           kHasName)
DEF_OPCODE( DELETE_ATTR                  , Opcode::Class::kAttr,           kHasName)

DEF_OPCODE( UNARY_INVERT                 , Opcode::Class::kUnaryMath,      kMayDel)
DEF_OPCODE( UNARY_NEGATIVE               , Opcode::Class::kUnaryMath,      kMayDel)
DEF_OPCODE( UNARY_NOT                    , Opcode::Class::kUnaryMath,      kMayDel)
DEF_OPCODE( UNARY_POSITIVE               , Opcode::Class::kUnaryMath,      kMayDel)
DEF_OPCODE( BINARY_OP                    , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_ADD                   , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_AND                   , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_FLOOR_DIVIDE          , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_LSHIFT                , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_MATRIX_MULTIPLY       , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_MODULO                , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_MULTIPLY              , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_OR                    , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_POWER                 , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_RSHIFT                , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_SUBTRACT              , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_TRUE_DIVIDE           , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( BINARY_XOR                   , Opcode::Class::kBinaryMath,     kMayDel)
DEF_OPCODE( INPLACE_ADD                  , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_AND                  , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_FLOOR_DIVIDE         , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_LSHIFT               , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_MATRIX_MULTIPLY      , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_MODULO               , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_MULTIPLY             , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_OR                   , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_POWER                , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_RSHIFT               , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_SUBTRACT             , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_TRUE_DIVIDE          , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( INPLACE_XOR                  , Opcode::Class::kBinaryMath,     0)
DEF_OPCODE( COMPARE_OP                   , Opcode::Class::kBinaryMath,     kMayDel)

DEF_OPCODE( BUILD_TUPLE                  , Opcode::Class::kContainerBuild, kCanDel)
DEF_OPCODE( BUILD_LIST                   , Opcode::Class::kContainerBuild, kCanDel)
DEF_OPCODE( BUILD_MAP                    , Opcode::Class::kContainerBuild, kCanDel)
DEF_OPCODE( BUILD_CONST_KEY_MAP          , Opcode::Class::kContainerBuild, kCanDel)
DEF_OPCODE( BUILD_SET                    , Opcode::Class::kContainerBuild, kCanDel)
DEF_OPCODE( BUILD_SLICE                  , Opcode::Class::kContainerBuild, kCanDel)
DEF_OPCODE( BUILD_STRING                 , Opcode::Class::kContainerBuild, kCanDel)
DEF_OPCODE( BUILD_LIST_UNPACK            , Opcode::Class::kContainerBuild, kMayDel)
DEF_OPCODE( BUILD_MAP_UNPACK             , Opcode::Class::kContainerBuild, kMayDel)
DEF_OPCODE( BUILD_SET_UNPACK             , Opcode::Class::kContainerBuild, kMayDel)
DEF_OPCODE( BUILD_TUPLE_UNPACK           , Opcode::Class::kContainerBuild, kMayDel)
DEF_OPCODE( BUILD_TUPLE_UNPACK_WITH_CALL , Opcode::Class::kContainerBuild, 0)
DEF_OPCODE( BUILD_MAP_UNPACK_WITH_CALL   , Opcode::Class::kContainerBuild, 0)
DEF_OPCODE( CALL                         , Opcode::Class::kCall,           0)
DEF_OPCODE( CALL_FUNCTION                , Opcode::Class::kCall,           0)
DEF_OPCODE( CALL_FUNCTION_EX             , Opcode::Class::kCall,           0)
DEF_OPCODE( CALL_FUNCTION_KW             , Opcode::Class::kCall,           0)
DEF_OPCODE( CALL_METHOD                  , Opcode::Class::kCall,           0)

DEF_OPCODE( DICT_MERGE                   , Opcode::Class::kContainerMerge, 0)
DEF_OPCODE( DICT_UPDATE                  , Opcode::Class::kContainerMerge, 0)
DEF_OPCODE( LIST_APPEND                  , Opcode::Class::kContainerMerge, 0)
DEF_OPCODE( LIST_EXTEND                  , Opcode::Class::kContainerMerge, 0)
DEF_OPCODE( MAP_ADD                      , Opcode::Class::kContainerMerge, 0)
DEF_OPCODE( SET_ADD                      , Opcode::Class::kContainerMerge, 0)
DEF_OPCODE( SET_UPDATE                   , Opcode::Class::kContainerMerge, 0)

DEF_OPCODE( POP_JUMP_BACKWARD_IF_FALSE   , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( POP_JUMP_BACKWARD_IF_NONE    , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( POP_JUMP_BACKWARD_IF_NOT_NONE, Opcode::Class::kControl,        kJRel)
DEF_OPCODE( POP_JUMP_BACKWARD_IF_TRUE    , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( POP_JUMP_FORWARD_IF_FALSE    , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( POP_JUMP_FORWARD_IF_NONE     , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( POP_JUMP_FORWARD_IF_NOT_NONE , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( POP_JUMP_FORWARD_IF_TRUE     , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( POP_JUMP_IF_FALSE            , Opcode::Class::kControl,        kJAbs)
DEF_OPCODE( POP_JUMP_IF_TRUE             , Opcode::Class::kControl,        kJAbs)
DEF_OPCODE( JUMP_ABSOLUTE                , Opcode::Class::kControl,        kJAbs | kNotFall)
DEF_OPCODE( JUMP_BACKWARD                , Opcode::Class::kControl,        kJRel | kNotFall)
DEF_OPCODE( JUMP_BACKWARD_NO_INTERRUPT   , Opcode::Class::kControl,        kJRel | kNotFall)
DEF_OPCODE( JUMP_FORWARD                 , Opcode::Class::kControl,        kJRel | kNotFall)
DEF_OPCODE( JUMP_IF_NOT_EXC_MATCH        , Opcode::Class::kControl,        kJAbs)
#if (PY_MAJOR_VERSION == 3) && (PY_MINOR_VERSION < 11)
DEF_OPCODE( JUMP_IF_FALSE_OR_POP         , Opcode::Class::kControl,        kJAbs)
DEF_OPCODE( JUMP_IF_TRUE_OR_POP          , Opcode::Class::kControl,        kJAbs)
#else
DEF_OPCODE( JUMP_IF_FALSE_OR_POP         , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( JUMP_IF_TRUE_OR_POP          , Opcode::Class::kControl,        kJRel)
#endif
DEF_OPCODE( FOR_ITER                     , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( SETUP_LOOP                   , Opcode::Class::kControl,        kJRel)
DEF_OPCODE( CONTINUE_LOOP                , Opcode::Class::kControl,        kJRel | kNotFall)
DEF_OPCODE( BREAK_LOOP                   , Opcode::Class::kControl,        kNotFall)

DEF_OPCODE( UNPACK_EX                    , Opcode::Class::kUnpack,         0)
DEF_OPCODE( UNPACK_SEQUENCE              , Opcode::Class::kUnpack,         0)

DEF_OPCODE( LOAD_NAME                    , Opcode::Class::kOther,          kHasName | kCanDel)
DEF_OPCODE( STORE_NAME                   , Opcode::Class::kOther,          kHasName)
DEF_OPCODE( DELETE_NAME                  , Opcode::Class::kOther,          kHasName)

DEF_OPCODE( KW_NAMES                     , Opcode::Class::kOther,          kHasConst | kCanDel)
DEF_OPCODE( LOAD_CONST                   , Opcode::Class::kOther,          kHasConst | kCanDel)

DEF_OPCODE( CONTAINS_OP                  , Opcode::Class::kOther,          kMayDel)
DEF_OPCODE( IS_OP                        , Opcode::Class::kOther,          kCanDel)
DEF_OPCODE( LIST_TO_TUPLE                , Opcode::Class::kOther,          kCanDel)
DEF_OPCODE( GET_ITER                     , Opcode::Class::kOther,          kMayDel)
DEF_OPCODE( MAKE_FUNCTION                , Opcode::Class::kOther,          kCanDel)
DEF_OPCODE( RETURN_GENERATOR             , Opcode::Class::kOther,          kNotFall)
DEF_OPCODE( RETURN_VALUE                 , Opcode::Class::kOther,          kNotFall)

DEF_OPCODE( BEFORE_WITH                  , Opcode::Class::kException,      kJRel)
DEF_OPCODE( BEGIN_FINALLY                , Opcode::Class::kException,      0)
DEF_OPCODE( END_FINALLY                  , Opcode::Class::kException,      0)
DEF_OPCODE( POP_BLOCK                    , Opcode::Class::kException,      0)
DEF_OPCODE( POP_EXCEPT                   , Opcode::Class::kException,      0)
DEF_OPCODE( POP_FINALLY                  , Opcode::Class::kException,      0)
DEF_OPCODE( PREP_RERAISE_STAR            , Opcode::Class::kException,      0)
DEF_OPCODE( PUSH_EXC_INFO                , Opcode::Class::kException,      0)
DEF_OPCODE( RAISE_VARARGS                , Opcode::Class::kException,      0)
DEF_OPCODE( RERAISE                      , Opcode::Class::kException,      kNotFall)
DEF_OPCODE( SETUP_EXCEPT                 , Opcode::Class::kException,      kJRel)
DEF_OPCODE( SETUP_FINALLY                , Opcode::Class::kException,      kJRel)
DEF_OPCODE( SETUP_WITH                   , Opcode::Class::kException,      kJRel)
DEF_OPCODE( WITH_CLEANUP_FINISH          , Opcode::Class::kException,      0)
DEF_OPCODE( WITH_CLEANUP_START           , Opcode::Class::kException,      0)
DEF_OPCODE( WITH_EXCEPT_START            , Opcode::Class::kException,      0)

DEF_OPCODE( ASYNC_GEN_WRAP               , Opcode::Class::kOther,          0)
DEF_OPCODE( BEFORE_ASYNC_WITH            , Opcode::Class::kOther,          0)
DEF_OPCODE( CALL_FINALLY                 , Opcode::Class::kOther,          0)
DEF_OPCODE( CHECK_EG_MATCH               , Opcode::Class::kOther,          0)
DEF_OPCODE( CHECK_EXC_MATCH              , Opcode::Class::kOther,          0)
DEF_OPCODE( COPY_DICT_WITHOUT_KEYS       , Opcode::Class::kOther,          0)
DEF_OPCODE( COPY_FREE_VARS               , Opcode::Class::kOther,          kHasFree)
DEF_OPCODE( END_ASYNC_FOR                , Opcode::Class::kOther,          0)
DEF_OPCODE( FORMAT_VALUE                 , Opcode::Class::kOther,          0)
DEF_OPCODE( GEN_START                    , Opcode::Class::kOther,          0)
DEF_OPCODE( GET_AITER                    , Opcode::Class::kOther,          0)
DEF_OPCODE( GET_ANEXT                    , Opcode::Class::kOther,          0)
DEF_OPCODE( GET_AWAITABLE                , Opcode::Class::kOther,          0)
DEF_OPCODE( GET_LEN                      , Opcode::Class::kOther,          0)
DEF_OPCODE( GET_YIELD_FROM_ITER          , Opcode::Class::kOther,          0)
DEF_OPCODE( IMPORT_FROM                  , Opcode::Class::kOther,          kHasName)
DEF_OPCODE( IMPORT_NAME                  , Opcode::Class::kOther,          kHasName)
DEF_OPCODE( IMPORT_STAR                  , Opcode::Class::kOther,          0)
DEF_OPCODE( LOAD_ASSERTION_ERROR         , Opcode::Class::kOther,          kCanDel)
DEF_OPCODE( LOAD_BUILD_CLASS             , Opcode::Class::kOther,          kCanDel)
DEF_OPCODE( MATCH_CLASS                  , Opcode::Class::kOther,          kMayDel)
DEF_OPCODE( MATCH_KEYS                   , Opcode::Class::kOther,          kMayDel)
DEF_OPCODE( MATCH_MAPPING                , Opcode::Class::kOther,          kMayDel)
DEF_OPCODE( MATCH_SEQUENCE               , Opcode::Class::kOther,          kMayDel)
DEF_OPCODE( PRECALL                      , Opcode::Class::kOther,          kNop)
DEF_OPCODE( PRINT_EXPR                   , Opcode::Class::kOther,          0)
DEF_OPCODE( PUSH_NULL                    , Opcode::Class::kOther,          0)
DEF_OPCODE( SEND                         , Opcode::Class::kOther,          0)
DEF_OPCODE( SETUP_ANNOTATIONS            , Opcode::Class::kOther,          0)
DEF_OPCODE( SETUP_ASYNC_WITH             , Opcode::Class::kOther,          0)
DEF_OPCODE( YIELD_FROM                   , Opcode::Class::kOther,          0)
DEF_OPCODE( YIELD_VALUE                  , Opcode::Class::kOther,          0)
