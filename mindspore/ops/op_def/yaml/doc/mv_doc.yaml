mv:
    description: |
        Multiply matrix `input` and vector `vec`.
        If `input` is a tensor with shape :math:`(N, M)` and `vec` is a tensor with shape :math:`(M,)`,
        The output is a 1-D tensor which shape is :math:`(N,)`.

        .. warning::
            This is an experimental API that is subject to change or deletion.

        Args:
            input (Tensor): The input matrix which shape is :math:`(N,M)` and the rank must be 2-D.
            vec (Tensor): The input vector which shape is :math:`(M,)` and the rank is 1-D.

        Returns:
            Tensor, the shape is :math:`(N,)`.

        Raises:
            TypeError: If `input` or `vec` is not a tensor.
            TypeError: If the dtype of `input` or `vec` is not float16 or float32.
            TypeError: If the dtypes of `input` and `vec` are different.
            ValueError: If the `input` is not a 2-D tensor or the `vec` is not a 1-D tensor.

        Supported Platforms:
            ``Ascend``

        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> input = Tensor(np.array([[3., 4.], [1., 6.], [1., 3.]]).astype(np.float32))
            >>> vec = Tensor(np.array([1., 2.]).astype(np.float32))
            >>> output = ops.auto_generate.mv(input, vec)
            >>> print(output)
            [11. 13. 7.]
