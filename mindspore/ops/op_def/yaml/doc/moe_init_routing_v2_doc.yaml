moe_init_routing_v2:
    description: |
        Performs routing on the computation result of MoeGatingTopKSoftmaxV2.

        Notes:
            - NUM_ROWS: The number of rows in 'x', which represents the number of original input tokens.
            - H: The number of cols in 'x', which denotes for the hiddens of input tokens.
            - K: The number of experts corresponding to each row of features in the output of MoeGatingTopKSoftmaxV2.

        Inputs:
            - **x** (Tensor) - A 2D tensor, which contains the input feature tokens. The shape of the tensor is (NUM_ROWS, H).
            Supported dtypes: Float16, BFloat16, Float32.
            - **expert_idx** (Tensor) - A 2D tensor, representing K experts corresponding to each row of features in the output of MoeGatingTopKSoftmaxV2.
            The shape of the tensor is (NUM_ROWS, K). Supported dtype: int32. In the Drop/Pad scenario or when the output 'expert_tokens_count_or_cumsum'
            is required in the non-Drop/Pad scenario, the value range of this tensor is [0, 'expert_num' - 1]. In other scenarios, the value must be greater
            than or equal to 0.
            - **active_num** (int64) - Indicates whether the scenario is Active, this value works only when 'drop_pad_mode' = 0. The value must be greater than
            or equal to 0 where 0 is the Dropless scenario and others represent the Active scenario.
            - **expert_capacity** (int64) - The number of tokens that each expert can process. The value must be greater than or equal to 0. In the Drop/Pad
            scenario, the value range is (0, NUM_ROWS].
            - **expert_num** (int64) - The number of experts. The value must be greater than or equal to 0. In the Drop/Pad scenario or when 'expert_tokens_count_or_cumsum_flag' > 0,
            the value must be greater than 0.
            - **drop_pad_mode** (int64) - Indicates whether the scenario is Drop/Pad. The value must be 0 or 1:
                - 0: Drop/Pad scenario.
                - 1: non-Drop/Pad scenario.
            - **expert_tokens_count_or_cumsum_flag** (int64) - A flag which controls whether the output 'expert_tokens_count_or_cumsum' is required. The value must be 0, 1 or 2:
                - 0: The output 'expert_tokens_count_or_cumsum' is not required.
                - 1: The output 'expert_tokens_count_or_cumsum' is required, which represents the accumulated number of tokens processed by each expert.
                - 2: The output 'expert_tokens_count_or_cumsum' is required, which represents the number of tokens processed by each expert.
            - **expert_tokens_before_capacity_flag** (bool) - A flag which controls whether the output 'expert_tokens_before_capacity' is required.
                - False: The output 'expert_tokens_before_capacity' is not required.
                - True: The output 'expert_tokens_before_capacity' is required, which represents the number of tokens processed by each expert before the drop.

        Outputs:
            - **expanded_x** (Tensor) - A 2D/3D tensor which indicates features extended based on 'expert_idx'. The shape of the tensor depends on scenarios:
                - Dropless scenario: The shape is (NUM_ROWS * K, H).
                - Active scenario: The shape is (min('active_num', NUM_ROWS * K), H).
                - Drop/Pad scenario: The shape is ('expert_num', 'expert_capacity', H).
            Supported dtypes: Float16, BFloat16, Float32.
            - **expanded_row_idx** (Tensor) - A 1D tensor which represents the mapping between 'expanded_x' and 'x'. The shape of the tensor is (NUM_ROWS * K).
            Supported dtype: int32.
            - **expert_tokens_count_or_cumsum** (Tensor) - A 1D tensor which indicates the statistics on the number of tokens processed by each expert and the accumulated value.
            The value of the tensor is valid only in the non-Drop/Pad scenario which is controlled by the 'expert_tokens_count_or_cumsum_flag'.
            The shape of the tensor is ('expert_num'). Supported dtype: int32.
            - **expert_tokens_before_capacity** (Tensor) - A 1D tensor which indicates the statistics on the number of tokens processed by each expert before the drop.
            The value of the tensor is valid only in the Drop/Pad scenario which is controlled by the 'expert_tokens_before_capacity_flag'.
            The shape of the tensor is ('expert_num'). Supported dtype: int32.

        Raises:
            TypeError: If the data type of input Tensor does not match the description in args.
            ShapeError: If the shape of input Tensor does not match the description in args.

        Supported Platforms:
            ``Ascend``
