slice:
    description: |
        Slices a tensor in the specified shape.

        Refer to :func:`mindspore.ops.slice` for more details.

        Args:
            input (Tensor) - The target tensor.
                The shape is :math:`(N, *)` where :math:`*` means, any number of additional dimensions.
            begin (Union[tuple, list]) - The beginning of the slice. Only constant value(>=0) is allowed.
            size (Union[tuple, list]) - The size of the slice. Only constant value is allowed.

        Returns:
            Tensor, the shape is: input `size`, the data type is the same as `input_x`.

        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``

        Examples:
            >>> from mindspore import Tensor
            >>> from mindspore import ops
            >>> import numpy as np
            >>> data = Tensor(np.array([[[1, 1, 1], [2, 2, 2]],
            ...                         [[3, 3, 3], [4, 4, 4]],
            ...                         [[5, 5, 5], [6, 6, 6]]]).astype(np.int32))
            >>> slice_op = ops.Slice()
            >>> output = slice_op(data, (1, 0, 0), (1, 1, 3))
            >>> print(output)
            [[[3 3 3]]]
            >>> output = slice_op(data, (1, 0, 0), (1, 1, 2))
            >>> print(output)
            [[[3 3]]]
            >>> output = slice_op(data, (1, 0, 0), (1, 1, 1))
            >>> print(output)
            [[[3]]]
            >>> output = slice_op(data, (1, 1, 0), (1, 1, 3))
            >>> print(output)
            [[[4 4 4]]]
            >>> output = slice_op(data, (1, 0, 1), (1, 1, 2))
            >>> print(output)
            [[[3 3]]]
