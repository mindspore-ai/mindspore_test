fori_loop:
    description: |
        Provide a useful op for loop from lower to upper.

        .. warning::
            This is an experimental API that is subject to change or deletion.

        Inputs:
            - **lower** (Union[int, Tensor]) - The start index of loop.
            - **upper** (Union[int, Tensor]) - The end index of loop.
            - **loop_func** (Function) - The loop function, takes two arguments.
            - **init_val** (Union[Tensor, number, str, bool, list, tuple, dict]) - The init value.
            - **unroll** (bool, optional) - The flag for whether unroll in compile process,
              only valid when the number of loop iterations is determined. Default: ``True`` .

        Outputs:
            Union[Tensor, number, str, bool, list, tuple, dict], the final result of the loop,
            has same type with input `init_val` .

        Raises:
            TypeError: If `lower` is not an int or a Tensor.
            TypeError: If `upper` is not an int or a Tensor.
            TypeError: If `loop_func` is not a function.
            ValueError: If `loop_func` cannot take index and `init_val` as arguments or if the type
                        of output it produces is different from the type of `init_val` .

        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``

        Examples:
            >>> fori_loop = ops.ForiLoop()
            >>> def cumsum(index, res):
            ...     return index + res
            ...
            >>> result_init = 0
            >>> result = fori_loop(0, 4, cumsum, result_init)
