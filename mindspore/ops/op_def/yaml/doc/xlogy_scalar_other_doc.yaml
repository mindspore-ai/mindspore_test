xlogy_scalar_other:
    description: |
        Computes the first input tensor multiplied by the logarithm of second input tensor element-wise.
        Returns zero when `input` is zero.

        .. math::

            out_i = input_{i}\ln{other_{i}}

        Inputs of `input` and `other` comply with the implicit type conversion rules to make the data types consistent.

        Inputs:
            - **input** (Tensor) - The first input is a tensor.
            - **other** (number) - The second input is a number.

        Outputs:
            - **y** (Tensor) - the shape is the same as the first input,
              and the data type is the one with higher precision or higher digits among the two inputs.

        Raises:
            TypeError: If `input` is not a Tensor.
            TypeError: If `other` is not a number.

        Supported Platforms:
            ``Ascend``

        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> from mindspore.ops.auto_generate import XLogYScalarOther
            >>> input = Tensor(np.array([-5, 0, 4]), mindspore.float32)
            >>> other = 2
            >>> op = XLogYScalarOther()
            >>> output = op(input, other)
            >>> print(output)
            [-3.465736   0.        2.7725887]