to:
  description: |
    to(self, dtype) -> Tensor
    
        Returns a tensor with the new specified data type.

        Note:
            When converting complex numbers to boolean type, the imaginary part of the complex number is not
            taken into account. As long as the real part is non-zero, it returns True; otherwise, it returns False.

        Args:
            self (Union[Tensor, Number]): The shape of tensor is :math:`(x_1, x_2, ..., x_R)`. The tensor to be to.
            dtype (dtype.Number): The valid data type of the output tensor. Only constant value is allowed.

        Returns:
            Tensor, the shape of tensor is the same as `input`, :math:`(x_1, x_2, ..., x_R)`.

        Raises:
            TypeError: If `input` is neither Tensor nor Number.
            TypeError: If `dtype` is not a Number.

        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``

        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> input_np = np.random.randn(2, 3, 4, 5).astype(np.float32)
            >>> input = Tensor(input_np)
            >>> dtype = mindspore.int32
            >>> output = ops.to(input, dtype)
            >>> print(output.dtype)
            Int32
            >>> print(output.shape)
            (2, 3, 4, 5)
