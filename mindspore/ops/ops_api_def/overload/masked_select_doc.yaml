masked_select:
  description: |
    masked_select(self, mask) -> Tensor
    
    Returns a new 1-D Tensor which indexes the `x` tensor according to the boolean `mask`.
    The shapes of the `mask` tensor and the `x` tensor don't need to match, but they must be broadcastable.
    
    Args:
        self (Tensor): The shape of tensor is :math:`(x_1, x_2, ..., x_R)`.
        mask (Tensor[bool]): The shape of tensor is :math:`(x_1, x_2, ..., x_R)`.
    
    Returns:
        A 1-D Tensor, with the same type as `self`.
    
    Raises:
        TypeError: If `mask` is not a Tensor.
        TypeError: If dtype of `mask` is not bool.
    
    Supported Platforms:
        ``Ascend`` ``GPU`` ``CPU``
    
    Examples:
        >>> import numpy as np
        >>> import mindspore
        >>> from mindspore import Tensor, ops
        >>> x = Tensor(np.array([1, 2, 3, 4]), mindspore.int64)
        >>> mask = Tensor(np.array([1, 0, 1, 0]), mindspore.bool_)
        >>> output = x.masked_select(mask)
        >>> print(output)
        [1 3]
