allclose:
  description: |
    allclose(other, rtol=1e-05, atol=1e-08, equal_nan=False) -> Tensor
    
    Returns a new Tensor with boolean elements representing if each element of `self`
    is "close" to the corresponding element of `other`. Closeness is defined as:

    .. math::
        |self-other| <= atol + rtol x |other|

    .. warning::
        This is an experimental API that is subject to change or deletion.

    Args:
        other (Tensor): Tensor to compare. Dtype must be same as `self`.
        rtol (Union[float, int, bool], optional): Relative tolerance. Default: ``1e-05`` .
        atol (Union[float, int, bool], optional): Absolute tolerance. Default: ``1e-08`` .
        equal_nan (bool, optional): If ``True`` , then two NaNs will be considered equal. Default: ``False``.

    Returns:
        A bool Scalar.

    Raises:
        TypeError: `self` or `other` is not Tensor.
        TypeError: Data types of `self` and `other` are not in the list of supported types.
        TypeError: `atol` or `rtol` is not float, int or bool.
        TypeError: `equal_nan` is not bool.
        TypeError: `self` and `other` have different dtypes.
        ValueError: `self` and `other` cannot broadcast.

    Supported Platforms:
        ``Ascend`` ``GPU`` ``CPU``

    Examples:
        >>> import mindspore
        >>> import numpy as np
        >>> from mindspore import Tensor
        >>> input = Tensor(np.array([1.3, 2.1, 3.2, 4.1, 5.1]), mindspore.float16)
        >>> other = Tensor(np.array([1.3, 3.3, 2.3, 3.1, 5.1]), mindspore.float16)
        >>> output = input.allclose(other)
        >>> print(output)
        False
