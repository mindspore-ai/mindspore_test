min:
  description: |
    min() -> Tensor
    
    Calculates the minimum value of the input tensor.
    
    For more details, please refer to :func:`mindspore.ops.extend.min`.
    
    .. method:: min(axis=None, keepdims=False, *, initial=None, where=True, return_indices=False) -> Tensor|number.Number
        :noindex:
    
    Return the minimum of a tensor or minimum along an axis.
    
    Note:
        When `axis` is ``None``, `keepdims` and subsequent parameters
        have no effect. At the same time, the index is fixed to return 0.
    
    Args:
        axis (Union[None, int, list, tuple of ints], optional): An axis or
            axes along which to operate. By default, flattened input is used. If
            `axis` is a tuple of ints, the minimum is selected over multiple axes,
            instead of a single axis or all the axes as before. Default: ``None`` .
        keepdims (bool, optional):
            If ``True`` , the axes which are reduced are left in the
            result as dimensions with size one. With this option, the result will
            broadcast correctly against the input array. Default: ``False`` .
    
    Keyword Args:
        initial (scalar, optional):
            The minimum value of an output element. Must be present to allow
            computation on empty slice. Default: ``None`` .
        where (Tensor[bool], optional):
            A boolean tensor which is broadcasted to match the dimensions of array,
            and selects elements to include in the reduction. If non-default value
            is passed, initial must also be provided. Default: ``True`` .
        return_indices (bool, optional): Whether to return the index of the minimum value. Default: ``False`` .
            If `axis` is a list or tuple of ints, it must be ``False`` .
    
    Returns:
        Tensor or scalar, minimum of input tensor. If `axis` is ``None`` , the result is a scalar
        value. If `axis` is given, the result is a tensor of dimension ``self.ndim - 1``.
    
    Raises:
        TypeError: If arguments have types not specified above.
    
    See also:
        - :func:`mindspore.Tensor.argmin`: Return the indices of the minimum values along an axis.
        - :func:`mindspore.Tensor.argmax`: Return the indices of the maximum values along an axis.
        - :func:`mindspore.Tensor.max`: Return the minimum of a tensor or minimum along an axis.
    
    Supported Platforms:
        ``Ascend`` ``GPU`` ``CPU``
    
    Examples:
        >>> import numpy as np
        >>> from mindspore import Tensor
        >>> a = Tensor(np.arange(4).reshape((2, 2)).astype('float32'))
        >>> output = Tensor.min(a)
        >>> print(output)
        0.0
        >>> output = Tensor.min(a, axis=0)
        >>> print(output)
        [0. 1.]
        >>> output = Tensor.min(a, axis=0, initial=9, where=Tensor([False]))
        >>> print(output)
        [9. 9.]
        >>> output = Tensor.min(a, axis=0, initial=9, where=Tensor([False, True]))
        >>> print(output)
        [9. 1.]
        >>> value, indices = Tensor.min(a, axis=0, return_indices=True)
        >>> print(value)
        [0. 1.]
        >>> print(indices)
        [0 0]

    .. method:: min(dim, keepdim=False) -> Tensor

    Calculates the minimum value along with the given dimension for the input tensor.

    Args:
        dim (int, optional): The dimension to reduce.
        keepdim (bool, optional): Whether to reduce dimension, if true, the output will keep same dimension
            with the input, the output will reduce dimension if false. Default: ``False`` .

    Returns:
        tuple (Tensor) if `dim` is not the default value ``None`` , tuple of 2 tensors, containing the minimum value
        of the input tensor along the given dimension `dim` and the corresponding index.

        - **values (Tensor)** - The minimum value of input tensor along the given dimension `dim`, with same dtype as
          `input`. If `keepdim` is ``True`` , the shape of output tensors is :math:`(input_1, input_2, ...,
          input_{axis-1}, 1, input_{axis+1}, ..., input_N)` . Otherwise, the shape is :math:`(input_1, input_2, ...,
          input_{axis-1}, input_{axis+1}, ..., input_N)` .
        - **index (Tensor)** - The index for the minimum value of the input tensor along the given dimension `dim`,
          with the same shape as `values`.

    Raises:
        ValueError: If `dim` is the default value ``None`` and `keepdim` is not ``False`` .

    Supported Platforms:
        ``Ascend`` ``GPU`` ``CPU``

    Examples:
        >>> import mindspore
        >>> import numpy as np
        >>> from mindspore import Tensor
        >>> x = Tensor(np.array([0.0, 0.4, 0.6, 0.7, 0.1]), mindspore.float32)
        >>> output, index = x.min(0, keepdim=True)
        >>> print(output, index)
        [0.0] [0]
