cummin:
  description: |
    cummin(dim) -> Tensor

    Returns a tuple `(values, indices)` where `values` is the cumulative minimum value of self Tensor
    along the dimension `dim`, and `indices` is the index location of each minimum value.
    
    .. math::
        \begin{array}{ll} \\
            y_{i} = \min(x_{1}, x_{2}, ... , x_{i})
        \end{array}

    .. note::
        - O2 mode is not supported in Ascend.
        - Backward gradient calculation is supported only in Ascend.

    Args:
        dim (int): Operation dimension. The value of `dim` must be in the range `[-self.ndim, self.ndim - 1]`.
    
    Returns:
        - values (Tensor) - The cumulative minimum of elements. The shape and dtype are the same as those of self Tensor.
        - indices (Tensor) - An index of each element of `values` in a corresponding row of self Tensor. The dtype is
          int64. The shape is the same as that of self Tensor.
    
    Raises:
        ValueError: If `dim` is out the range of `[-self.ndim, self.ndim - 1]`.

    Supported Platforms:
        ``Ascend`` ``GPU`` ``CPU``

    Examples:
        >>> from mindspore import Tensor
        >>> import mindspore
        >>> a = Tensor([-0.2284, -0.6628,  0.0975,  0.2680, -1.3298, -0.4220], mindspore.float32)
        >>> output = a.cummin(dim=0)
        >>> print(output[0])
        [-0.2284 -0.6628 -0.6628 -0.6628 -1.3298 -1.3298]
        >>> print(output[1])
        [0 1 1 1 4 4]